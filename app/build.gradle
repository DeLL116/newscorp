apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

// Currently used for enabling easy Parcelable support
// ---> See AlbumPhoto.kt
// ---> https://kotlinlang.org/docs/tutorials/android-plugin.html#enabling-parcelable-support
androidExtensions {
    experimental = true
}

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        applicationId "com.demo.chris.newscorpdemo"
        minSdkVersion 24
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // lib_androidui has "store" flavor dimensions, but NewsCorpDemo app (currently) does not.
        // -> Instruct Gradle to use lib_android_ui's "google" flavor dimension as default
        //    for all app build configurations until NewsCorpDemo needs / defines "store" flavors
        missingDimensionStrategy 'store', 'google'

        // lib_androidui has "device" flavor dimensions, but NewsCorpDemo app (currently) does not.
        // -> Instruct Gradle to use lib_android_ui's "phone" flavor dimension as default
        //    for all app build configurations until NewsCorpDemo needs / defines "device" flavors
        missingDimensionStrategy 'device', 'phone'
    }

    signingConfigs {
        // TODO :: Create new Keystore(and passwords) + Extract to more secure keystore parsing
        demoReleaseConfig {
            keyAlias 'Lateralus'
            keyPassword 'spiral0ut'
            storePassword 'spiral0ut'
            storeFile file('../keystore/newsCorpDemoKeyStore.jks')
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.demoReleaseConfig
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debugRelease {
            // --------
            // This build type should *never* be distributed externally!
            // This build type signs the app with the RELEASE KEY and
            // also enables debugging!
            //
            // Building with the RELEASE key is sometimes needed for debugging
            // platform-specific use-cases that need to be uploaded to an app-store
            // service...ie
            //  - Debugging a real-time in-app-purchase on Amazon's Live App Testing with Amazon's In-App-Billing SDK
            //  - Debugging a real-time in-app-purchase on Google's Live App Testing with Google's In-App-Billing SDK
            // --------

            // Copy the debug build type configuration
            initWith debug

            // Sign the debug build with the release signing configuration
            signingConfig signingConfigs.demoReleaseConfig

            // Matching fallback should be any debug build variant from accompanying modules
            matchingFallbacks = ['debug']
        }
    }

    flavorDimensions 'api'

    productFlavors {
        // --> API Flavor Dimension Types for different build platforms
        //     Prod = Production // Stage = Staging // dev = development
        prod {
            dimension "api"
        }
        stage {
            dimension "api"
        }
        dev {
            dimension "api"
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    // --> Project Modules
    implementation project(':lib_RetroNetworking')
    implementation project(':lib_androidui')

    // --> Testing
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:rules:1.1.1'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.1.1'

    // --> Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // --> Android Support / UI
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0-alpha01'              //ViewModel / LiveData
    implementation 'com.google.android.material:material:1.1.0-alpha02'
    implementation 'androidx.appcompat:appcompat:1.1.0-alpha01'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-alpha3'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0-alpha01'

    // --> Dagger2
    // kapt counterpart needed for all dagger "annotationProcessor" implementations
    kapt 'com.google.dagger:dagger-compiler:2.16'
    kapt 'com.google.dagger:dagger-android-processor:2.16'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.16'
    annotationProcessor 'com.google.dagger:dagger-android-processor:2.16'

    // --> Navigation
    implementation 'android.arch.navigation:navigation-fragment-ktx:1.0.0-alpha09'
    implementation 'android.arch.navigation:navigation-ui-ktx:1.0.0-alpha09'

    // --> Other
    implementation 'com.jakewharton.timber:timber:4.7.1'
}
